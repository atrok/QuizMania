package com.quizmania.repository;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;
import com.quizmania.auth.Role;

@DynamoDBTable(tableName = "User")
public class User{


	private String id;
	private String userName="";
	private String firstName="";
	private String email="";
	private String lastName="";
	private String password="none";
	private Set<String> role=new HashSet<String>();
	
	public String getPassword() {
		return password;
	}



	public User(String email,String password) {
		this.password=password;
		this.email=email;
		
	}
	
	public User(){}
	
	@DynamoDBHashKey
	@DynamoDBAutoGeneratedKey
	public String getId() {
		return id;
	}

	public void setId(String id) {
		this.id = id;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	public void setPassword(String password) {
		
		this.password = PassEncoder.get().encode(password);
	}

	@DynamoDBAttribute
	public String getFirstName() {
		return firstName;
	}

	@DynamoDBAttribute
	public String getLastName() {
		return lastName;
	}

	@Override
	public boolean equals(Object u) {
		if (u instanceof User) {
			User uu = (User) u;

			if ((id.equals(uu.id)) && 
					((
							(firstName.equals(uu.firstName))
							&& (lastName.equals(uu.lastName))
							&& (userName.equals(uu.userName))
					) || email.equals(uu.email))
					)
				return true;
		}

		return false;
	}
	
	@DynamoDBAttribute
	public String getUsername() {
		return userName;
	}

	public void setUsername(String username) {
		this.userName = username;
	}

	@DynamoDBAttribute
	public String getEmail() {
		return email;
	}

	public void setEmail(String email) {
		this.email = email;
	}


	
	public Set<String> getRole() {
		return role;
	}


	public void setRole(String... role) {
		Collections.addAll(this.role, role);
	}


}

class PassEncoder{
	
	public static PasswordEncoder get(){
		return new BCryptPasswordEncoder(10);
	}
}